---
- name: Configure VM
  gather_facts: yes
  hosts: all
  user: root
  vars_files:
     group_vars/all.yml
  tasks:
   - block:
     - name: Configure storate - create pool
       shell: zpool create -f data mirror c1t1d0 c1t2d0 mirror c1t3d0 c1t4d0

     - name: Configure storate - create datasets for NFS
       shell: "zfs create data/{{item}}"
       loop:
         - nfs3
         - nfs4
         - nfs41

     - name: Configure storate - create NFS shares
       shell: "zfs set sharenfs=on data/{{item}}"
       loop:
         - nfs3
         - nfs4
         - nfs41

     - name: Configure storate - create dataset for SMB2
       shell: zfs create data/smb2

     - name: Configure storate - create SMB2 share
       shell: zfs set sharesmb=on data/smb2

     - name: shareall
       shell: shareall

     - name: chmod
       shell: chmod -R 777 /data/*

     when: inventory_hostname | regex_search('Firecrest')

   - block: 
     - name: Create the mount point
       file:
         path: "/mnt/nas/{{item}}"
         state: directory
         mode: 0777
         recurse: yes
       loop:
          - nfs3
          - nfs4
          - nfs41

     - set_fact:
          mut1: "{{vmpref}}-{{mut}}"
     - set_fact:
         mut_ip: "{{hostvars[mut1]['ansible_default_ipv4']['address']}}"

     - name: Wait 300 seconds for mut port 22 to become open
       wait_for:
         port: 22
         host: "{{mut_ip}}"
         search_regex: OpenSSH
         delay: 10

     - name: Mount share NFS v3 and v4
       mount:
         name: "/mnt/nas/nfs{{item}}"
         src: "{{mut_ip}}:/data/nfs{{item}}"
         fstype: nfs
         opts: "rw,sync,nfsvers={{item}}"
         state: mounted
       loop:
          - 3
          - 4

     - name: Mount share NFSv4.1
       mount:
         name: "/mnt/nas/nfs41"
         src: "{{mut_ip}}:/data/nfs41"
         fstype: nfs
         opts: "rw,sync"
         state: mounted
 
     - name: Copy fio conf
       template:
         src: fio_nas.wk
         dest: /root/fio.wk


     - name: Run fio task
       shell: fio --output fio.log fio.wk
       async: 4000000
       poll: 0
       register: fio
       ignore_errors: yes
   
     when: ansible_system == 'Linux'
 
