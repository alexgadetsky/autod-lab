#!groovy
pipeline {
	parameters {
		choice(
			name: 'VM_state',
			choices: ['restarted','absent','poweredon','poweredoff'],
			description: 'Select VM action')
			
		text(
			name: 'Pattern',
			description: 'Enter Pattern for limit VMs',
			defaultValue: 'Ubuntu or for-smth')
	}
	agent any
	environment {
		WORKSPACE1 = ""
	}
	stages {
		stage('GitClone') {
			steps {
				script {
					WORKSPACE1 = WORKSPACE
				}
				git branch: 'main', url: 'git@github.com:alexgadetsky/autod-lab.git'
			}
		}
		stage('ActionVMs') {
			stages {
				stage('Deploy VM') {
					steps {
						dir("${WORKSPACE1}/ansible") {
							ansiblePlaybook([
								installation:	'ansible',
								inventory:	'inv.vmware.yml',
								playbook:	'pb_lab_manage_vm.yml',
								extraVars:	[
									vm_state:	"${params.VM_state}"
								],
								extras:         "-l *${params.Pattern}*"

							])
						}
					}
				}
			}
		}
	}
}

